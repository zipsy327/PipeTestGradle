plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version '4.0.0'
}

// node {  
//   version = '18.13.0'
//   npmVersion = '8.19.3' 
//   download = true
// }

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// tasks.withType(JavaCompile) {
//     options.encoding = 'UTF-8' 
//     sourceCompatibility = '11'
//     targetCompatibility = '11'
// }

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
/*
tasks.register("npm-install") {
  group = "application"
  description = "Installs dependencies from package.json"
  tasks.appNpmInstall.exec();
}*/

task appNpmInstall(type: NpmTask) {
  //description = "Installs dependencies from package.json"
  //workingDir = file("${projectDir}/src/main/resources/static");
  workingDir = file("${projectDir}/reactjs");
  args = ["install"]
}

task npmBuild(type: NpmTask) {
	workingDir = file("${projectDir}/reactjs")
	args = ["run", "build"]
}

def frontendDir = "$projectDir/src/main/reactjs"

sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources {
	//dependsOn "appNpmInstall"
	//dependsOn "npmBuild"	
	dependsOn "copyReactBuildFiles"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix --force"
		commandLine 'npm', 'install'
	}
}


task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static/"
}

//tasks.bootJar {
//    dependsOn "copyReactBuildFiles"
//}
